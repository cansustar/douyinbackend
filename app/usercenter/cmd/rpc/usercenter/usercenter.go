// Code generated by goctl. DO NOT EDIT.
// Source: usercenter.proto

package usercenter

import (
	"context"
	pb2 "douyinbackend/app/usercenter/cmd/rpc/pb/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	DouyinUserLoginRequest     = pb2.DouyinUserLoginRequest
	DouyinUserLoginResponse    = pb2.DouyinUserLoginResponse
	DouyinUserRegisterRequest  = pb2.DouyinUserRegisterRequest
	DouyinUserRegisterResponse = pb2.DouyinUserRegisterResponse
	DouyinUserRequest          = pb2.DouyinUserRequest
	DouyinUserResponse         = pb2.DouyinUserResponse
	User                       = pb2.User

	Usercenter interface {
		RegisterUser(ctx context.Context, in *DouyinUserRegisterRequest, opts ...grpc.CallOption) (*DouyinUserRegisterResponse, error)
		LoginUser(ctx context.Context, in *DouyinUserLoginRequest, opts ...grpc.CallOption) (*DouyinUserLoginResponse, error)
		GetUser(ctx context.Context, in *DouyinUserRequest, opts ...grpc.CallOption) (*DouyinUserResponse, error)
	}

	defaultUsercenter struct {
		cli zrpc.Client
	}
)

func NewUsercenter(cli zrpc.Client) Usercenter {
	return &defaultUsercenter{
		cli: cli,
	}
}

func (m *defaultUsercenter) RegisterUser(ctx context.Context, in *DouyinUserRegisterRequest, opts ...grpc.CallOption) (*DouyinUserRegisterResponse, error) {
	client := pb2.NewUsercenterClient(m.cli.Conn())
	return client.RegisterUser(ctx, in, opts...)
}

func (m *defaultUsercenter) LoginUser(ctx context.Context, in *DouyinUserLoginRequest, opts ...grpc.CallOption) (*DouyinUserLoginResponse, error) {
	client := pb2.NewUsercenterClient(m.cli.Conn())
	return client.LoginUser(ctx, in, opts...)
}

func (m *defaultUsercenter) GetUser(ctx context.Context, in *DouyinUserRequest, opts ...grpc.CallOption) (*DouyinUserResponse, error) {
	client := pb2.NewUsercenterClient(m.cli.Conn())
	return client.GetUser(ctx, in, opts...)
}
